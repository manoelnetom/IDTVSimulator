package com.sun.dtv.ui;

class Preference
{
	public Object value;
	public int priority;
	public Preference(Object value, int priority) 
	{
		this.value = value;
		this.priority = priority;
	}
}

public class PlaneSetupPattern {
	/**
	 * A preference value for use in the setPreference and getPriority methods in 
	 * the PlaneSetupPattern. It indicates that this feature is required in the 
	 * PlaneSetup. If this feature is not available, the PlaneSetup object won't 
	 * be selected. */
	public static final int REQUIRED = 1;
	/**
	 * PREFERRED: A preference value for use in the setPreference and getPriority methods 
	 * in the PlaneSetupPattern. It indicates that this feature is desired in 
	 * the PlaneSetup. A selection with this feature is preferred over a 
	 * selection that does not include this feature, although both selections 
	 * are valid matches. 
	 * */
	public static final int PREFERRED = 2;
	/**
	 * DONT_CARE: A preference value for use in the setPreference and getPriority methods 
	 * in the PlaneSetupPattern. It indicates that the presence or absence of 
	 * this feature in the PlaneSetup does not matter. Preferences with this 
	 * priority do not influence the selection result. */
	public static final int DONT_CARE = 3;
	/**PREFERRED_NOT: A preference value for use in the setPreference and getPriority methods 
	 * in the PlaneSetupPattern. It indicates that this feature is desired not 
	 * to be present in the PlaneSetup. A selection without this feature is 
	 * preferred over a selection that does include this feature, although 
	 * both selections are valid matches. */
	public static final int PREFERRED_NOT = 4;
	/**
	 * A preference value for use in the setPreference and getPriority methods in 
	 * the PlaneSetupPattern. It indicates that this feature is required not to be 
	 * present in the PlaneSetup. If this feature is available, the PlaneSetup 
	 * object won't be selected. */
	public static final int REQUIRED_NOT = 5;
	
	/**
	 * A preference value for use in the setPreference and getPriority methods in 
	 * the PlaneSetupPattern. It indicates that the plane setup should have no 
	 * impact on already displayed backgrounds. 
	 * If used with the REQUIRED priority, this means there must not be any changes. 
	 * If used with the PREFERRED priority, this means changes may be made but 
	 * should be minimized.
	 * The PREFERRED_NOT and REQUIRED_NOT priorities can be ignored in the selection 
	 * of an PlaneSetup for this preference type. This preference is used by the 
	 * platform as a constraint in selecting setups. Patterns generated by the 
	 * platform and then returned to applications (e.g. from a getSetupPattern 
	 * method) shall not have this preference filled in by the platform. 
	 */
	public static final int NO_BACKGROUND_IMPACT = 6;

	/**
	 * A preference value for use in the <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#setPreference(int, int)"
	 * ><CODE>setPreference</CODE></A> and <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#getPriority(int)">
	 * <CODE>getPriority</CODE></A> methods in the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetupPattern</CODE></A>. It
	 * indicates that the plane setup should have no impact on already running
	 * graphical applications.
	 * 
	 * If used with the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#REQUIRED">
	 * <CODE>REQUIRED</CODE></A> priority, this means there must not be any
	 * changes. If used with the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#PREFERRED">
	 * <CODE>PREFERRED</CODE></A> priority, this means changes may be made but
	 * should be minimized.
	 * 
	 * The <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#PREFERRED_NOT">
	 * <CODE>PREFERRED_NOT</CODE></A> and <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#REQUIRED_NOT">
	 * <CODE>REQUIRED_NOT</CODE></A> priorities can be ignored in the selection
	 * of an <A HREF="../../../../com/sun/dtv/ui/PlaneSetup.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetup</CODE></A> for this
	 * preference type.
	 * 
	 * This preference is used by the platform as a constraint in selecting
	 * setups. Patterns generated by the platform and then returned to
	 * applications (e.g. from a <code>getSetupPattern</code> method) shall not
	 * have this preference filled in by the platform.
	 * 
	 * 
	 * 
	 */
	public static final int NO_GRAPHICS_IMPACT = 7;

	/**
	 * A preference value for use in the <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#setPreference(int, int)"
	 * ><CODE>setPreference</CODE></A> and <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#getPriority(int)">
	 * <CODE>getPriority</CODE></A> methods in the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetupPattern</CODE></A>. It
	 * indicates that the plane setup should have no impact on already running
	 * subtitle applications.
	 * 
	 * If used with the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#REQUIRED">
	 * <CODE>REQUIRED</CODE></A> priority, this means there must not be any
	 * changes. If used with the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#PREFERRED">
	 * <CODE>PREFERRED</CODE></A> priority, this means changes may be made but
	 * should be minimized.
	 * 
	 * The <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#PREFERRED_NOT">
	 * <CODE>PREFERRED_NOT</CODE></A> and <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#REQUIRED_NOT">
	 * <CODE>REQUIRED_NOT</CODE></A> priorities can be ignored in the selection
	 * of an <A HREF="../../../../com/sun/dtv/ui/PlaneSetup.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetup</CODE></A> for this
	 * preference type.
	 * 
	 * This preference is used by the platform as a constraint in selecting
	 * setups. Patterns generated by the platform and then returned to
	 * applications (e.g. from a <code>getSetupPattern</code> method) shall not
	 * have this preference filled in by the platform.
	 * 
	 * 
	 * 
	 */
	public static final int NO_SUBTITLE_IMPACT = 8;

	/**
	 * A preference value for use in the <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#setPreference(int, int)"
	 * ><CODE>setPreference</CODE></A> and <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#getPriority(int)">
	 * <CODE>getPriority</CODE></A> methods in the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetupPattern</CODE></A>. It
	 * indicates that the plane setup should have no impact on already running
	 * video streams. This does also include video stills.
	 * 
	 * If used with the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#REQUIRED">
	 * <CODE>REQUIRED</CODE></A> priority, this means there must not be any
	 * changes. If used with the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#PREFERRED">
	 * <CODE>PREFERRED</CODE></A> priority, this means changes may be made but
	 * should be minimized.
	 * 
	 * The <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#PREFERRED_NOT">
	 * <CODE>PREFERRED_NOT</CODE></A> and <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#REQUIRED_NOT">
	 * <CODE>REQUIRED_NOT</CODE></A> priorities can be ignored in the selection
	 * of an <A HREF="../../../../com/sun/dtv/ui/PlaneSetup.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetup</CODE></A> for this
	 * preference type.
	 * 
	 * This preference is used by the platform as a constraint in selecting
	 * setups. Patterns generated by the platform and then returned to
	 * applications (e.g. from a <code>getSetupPattern</code> method) shall not
	 * have this preference filled in by the platform.
	 * 
	 * 
	 * 
	 */
	public static final int NO_VIDEO_IMPACT = 9;

	/**
	 * A preference value for use in the <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#setPreference(int, int)"
	 * ><CODE>setPreference</CODE></A> and <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#getPriority(int)">
	 * <CODE>getPriority</CODE></A> methods in the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetupPattern</CODE></A>. It
	 * indicates that the plane setup should have no impact on already displayed
	 * videos stills. This does not include video streams in general.
	 * 
	 * If used with the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#REQUIRED">
	 * <CODE>REQUIRED</CODE></A> priority, this means there must not be any
	 * changes. If used with the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#PREFERRED">
	 * <CODE>PREFERRED</CODE></A> priority, this means changes may be made but
	 * should be minimized.
	 * 
	 * The <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#PREFERRED_NOT">
	 * <CODE>PREFERRED_NOT</CODE></A> and <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#REQUIRED_NOT">
	 * <CODE>REQUIRED_NOT</CODE></A> priorities can be ignored in the selection
	 * of an <A HREF="../../../../com/sun/dtv/ui/PlaneSetup.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetup</CODE></A> for this
	 * preference type.
	 * 
	 * This preference is used by the platform as a constraint in selecting
	 * setups. Patterns generated by the platform and then returned to
	 * applications (e.g. from a <code>getSetupPattern</code> method) shall not
	 * have this preference filled in by the platform.
	 * 
	 * 
	 * 
	 */
	public static final int NO_STILLVIDEO_IMPACT = 10;

	/**
	 * A preference value for use in the <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#setPreference(int, int)"
	 * ><CODE>setPreference</CODE></A> and <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#getPriority(int)">
	 * <CODE>getPriority</CODE></A> methods in the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetupPattern</CODE></A>. It
	 * indicates that the plane setup supports an interlaced display.
	 * 
	 * 
	 * 
	 */
	public static final int INTERLACED_DISPLAY = 11;

	/**
	 * A preference value for use in the <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#setPreference(int, int)"
	 * ><CODE>setPreference</CODE></A> and <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#getPriority(int)">
	 * <CODE>getPriority</CODE></A> methods in the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetupPattern</CODE></A>. It
	 * indicates that the plane setup supports flicker filtering (if it supports
	 * an interlaced screen).
	 * 
	 * 
	 * 
	 */
	public static final int FLICKER_FILTERING = 12;

	/**
	 * A preference value for use in the <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#setPreference(int, int)"
	 * ><CODE>setPreference</CODE></A> and <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#getPriority(int)">
	 * <CODE>getPriority</CODE></A> methods in the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetupPattern</CODE></A>. It
	 * indicates that the plane setup supports the display of video streams and
	 * graphics with aligned pixels of the same size. This does not include
	 * alignment of the origins of the two pixel coordinate spaces. Where a
	 * video plane is moving the video relative to the screen in real time (e.g.
	 * implementing pan and scan), graphics setups shall only support this
	 * feature where the implementation of the GraphicsPlane can track the
	 * position changes in the VideoPlane automatically.
	 * 
	 * This preference is used by the platform as a constraint in selecting
	 * setups. Patterns generated by the platform and then returned to
	 * applications (e.g. from a <code>getSetupPattern</code> method) shall not
	 * have this preference filled in by the platform.
	 * 
	 * 
	 * 
	 */
	public static final int VIDEO_GRAPHICS_PIXEL_ALIGNED = 13;

	/**
	 * A preference value for use in the <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#setPreference(int, int)"
	 * ><CODE>setPreference</CODE></A> and <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#getPriority(int)">
	 * <CODE>getPriority</CODE></A> methods in the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetupPattern</CODE></A>. It
	 * indicates that the plane setup supports the pixel aspect ratio, as
	 * specified in a com.sun.dtv.lwuit.geom.Dimension object which indicates
	 * the (relative) x, y pixel aspect ratio.
	 * 
	 * Instances of <A HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetupPattern</CODE></A>
	 * generated by the platform and returned to applications (e.g. from a
	 * <code>getPattern</code> method ) shall have this preference set to a
	 * platform specific value with the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#REQUIRED">
	 * <CODE>REQUIRED</CODE></A> priority.
	 * 
	 * 
	 * 
	 */
	public static final int PIXEL_ASPECT_RATIO = 14;

	/**
	 * A preference value for use in the <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#setPreference(int, int)"
	 * ><CODE>setPreference</CODE></A> and <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#getPriority(int)">
	 * <CODE>getPriority</CODE></A> methods in the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetupPattern</CODE></A>. It
	 * indicates that the plane setup supports the pixel resolution, as
	 * specified in a com.sun.dtv.lwuit.geom.Dimension object which indicates
	 * the pixel resolution of the GraphicsPlane.
	 * 
	 * Instances of <A HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetupPattern</CODE></A>
	 * generated by the platform and returned to applications (e.g. from a
	 * <code>getPattern</code> method ) shall have this preference set to a
	 * platform specific value with the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#REQUIRED">
	 * <CODE>REQUIRED</CODE></A> priority.
	 * 
	 * 
	 * 
	 */
	public static final int PIXEL_RESOLUTION = 15;

	/**
	 * A preference value for use in the <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#setPreference(int, int)"
	 * ><CODE>setPreference(int, int)</CODE></A> and <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#getPriority(int)">
	 * <CODE>getPriority(int)</CODE></A> methods in the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetupPattern</CODE></A>. It
	 * indicates that a single color background is requested, where that single
	 * color can be changed by applications.
	 * 
	 * 
	 * 
	 */
	public static final int CHANGEABLE_SINGLE_COLOR = 16;

	/**
	 * A preference value for use in the <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#setPreference(int, int)"
	 * ><CODE>setPreference(int, int)</CODE></A> and <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#getPriority(int)">
	 * <CODE>getPriority(int)</CODE></A> methods in the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetupPattern</CODE></A>. It
	 * indicates that a background is requested which can support still images.
	 * 
	 * 
	 * 
	 */
	public static final int STILL_IMAGE = 17;

	/**
	 * A preference value for use in the <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#setPreference(int, int)"
	 * ><CODE>setPreference</CODE></A> and <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#getPriority(int)">
	 * <CODE>getPriority</CODE></A> methods in the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetupPattern</CODE></A>. It
	 * indicates that the setup should support transparency in the graphics
	 * system such that the output of a video decoder is visible. (This includes
	 * also video stills.) The following setups fulfill this requirement:
	 * <ul>
	 * <li>Setups with a well defined transformation between video / still video
	 * pixels and graphics pixels (e.g. pixels are the same size).</li>
	 * <li>Setups where an application displays graphics over video / still
	 * video, while the video / still video is used as a background. Therefore
	 * there is no transformation required between the two sets of pixels in
	 * such kind of setups.</li>
	 * </ul>
	 * 
	 * Applications may specify a particular video / still video setup with
	 * which mixing must be supported. In cases where no specific video setup is
	 * required then it is not required to specify such a setup and null can be
	 * used instead.
	 * 
	 * This preference is used by the platform as a constraint in selecting
	 * setups. Patterns generated by the platform and then returned to
	 * applications (e.g. from a <code>getSetupPattern</code> method) shall not
	 * have this preference filled in by the platform.
	 * 
	 * 
	 * 
	 */
	public static final int VIDEO_MIXING = 18;

	/**
	 * A preference value for use in the <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#setPreference(int, int)"
	 * ><CODE>setPreference</CODE></A> and <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#getPriority(int)">
	 * <CODE>getPriority</CODE></A> methods in the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetupPattern</CODE></A>. It
	 * indicates that the plane setup supports the display of graphics in
	 * addition to video streams. The screen then includes planes associated
	 * with both kinds of setups where the video pixels and graphics pixels are
	 * fully aligned (same size) as well as setups where they are displayed
	 * together but where a more complex relationship exists between the two
	 * pixel coordinate spaces.
	 * 
	 * This preference is used by the platform as a constraint in selecting
	 * setups. Patterns generated by the platform and then returned to
	 * applications (e.g. from a <code>getSetupPattern</code> method) shall not
	 * have this preference filled in by the platform.
	 * 
	 * 
	 * 
	 */
	public static final int GRAPHICS_MIXING = 19;

	/**
	 * A preference value for use in the <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#setPreference(int, int)"
	 * ><CODE>setPreference</CODE></A> and <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#getPriority(int)">
	 * <CODE>getPriority</CODE></A> methods in the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetupPattern</CODE></A>. It
	 * indicates that the setup should support the mattes feature.
	 * 
	 * 
	 * 
	 */
	public static final int MATTE_SUPPORT = 20;

	/**
	 * A preference value for use in the <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#setPreference(int, int)"
	 * ><CODE>setPreference</CODE></A> and <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#getPriority(int)">
	 * <CODE>getPriority</CODE></A> methods in the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetupPattern</CODE></A>. It
	 * indicates that the setup should support rapid image scaling.
	 * 
	 * 
	 * 
	 */
	public static final int IMAGE_SCALING_SUPPORT = 21;

	/**
	 * A preference value for use in the <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#setPreference(int, int)"
	 * ><CODE>setPreference</CODE></A> and <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#getPriority(int)">
	 * <CODE>getPriority</CODE></A> methods in the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetupPattern</CODE></A>. It
	 * indicates that the graphics setup should support a Color Lookup Table.
	 * 
	 * 
	 * 
	 */
	public static final int INDEXED_COLOR_SUPPORT = 22;

	/**
	 * A preference value for use in the <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#setPreference(int, int)"
	 * ><CODE>setPreference</CODE></A> and <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#getPriority(int)">
	 * <CODE>getPriority</CODE></A> methods in the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetupPattern</CODE></A>. It
	 * indicates that the graphics setup should support Direct Color.
	 * 
	 * 
	 * 
	 * 
	 */
	public static final int DIRECT_COLOR_SUPPORT = 23;

	private Preference [] preferences;

	/**
	 * Constructor
	 * 
	 */
	public PlaneSetupPattern() 
	{
		preferences = new Preference[18];
		for (int i = 0; i < preferences.length; i++) 
		{
			preferences[i] = new Preference(null,DONT_CARE);
		}
	}

	/**
	 * Set the indicated preference to have the specified priority. If the
	 * preference has been previously set, the previous priority for this
	 * preference will be overwritten.
	 * 
	 * Attributes that are not filled in in a pattern (through <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#setPreference(int, int)"
	 * ><CODE>setPreference(int, int)</CODE></A>), shall have the priority <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#DONT_CARE">
	 * <CODE>DONT_CARE</CODE></A>. Any setup always satisfies these attributes.
	 * 
	 * 
	 * @param preference
	 *            - the preference to be indicated. Valid values for an
	 *            PlaneSetupPattern are: NO_GRAPHICS_IMPACT, NO_SUBTITLE_IMPACT,
	 *            NO_BACKGROUND_IMPACT, NO_VIDEO_IMPACT, NO_STILLVIDEO_IMPACT,
	 *            INTERLACED_DISPLAY, FLICKER_FILTERING,
	 *            VIDEO_GRAPHICS_PIXEL_ALIGNED, CHANGEABLE_SINGLE_COLOR,
	 *            STILL_IMAGE, VIDEO_MIXING, GRAPHICS_MIXING, MATTE_SUPPORT,
	 *            IMAGE_SCALING_SUPPORT, INDEXED_COLOR_SUPPORT, and
	 *            DIRECT_COLOR_SUPPORT. Subclasses may add further valid values.
	 *            An IllegalArgumentException shall be thrown if the preference
	 *            is not a valid value for this instance of PlaneSetupPattern
	 * @param priority
	 *            - the priority of the preference. Valid values are: REQUIRED,
	 *            PREFERRED, DONT_CARE, PREFERRED_NOT and REQUIRED_NOT. If
	 *            priority is not a valid priority as defined here a
	 *            java.lang.IllegalArgumentException will be thrown.
	 * @throws IllegalArgumentException
	 *             - if the preference or the priority parameter does not have a
	 *             valid value
	 */
	public void setPreference(int preference, int priority) throws IllegalArgumentException 
	{
		if (preference < NO_BACKGROUND_IMPACT || preference > DIRECT_COLOR_SUPPORT) 
		{
			throw new IllegalArgumentException("Preference parameter is invalid");
		}

		if (priority < REQUIRED || priority > REQUIRED_NOT) 
		{
			throw new IllegalArgumentException("Priority parameter is invalid");
		}
		Preference tmp = preferences[preference - NO_BACKGROUND_IMPACT];
		tmp.priority = priority;
	}

	/**
	 * Sets the indicated preference to have the specified value with the
	 * specified priority. A call to this method can be also used to overwrite
	 * values and priorities of previously set preferences.
	 * 
	 * 
	 * @param preference
	 *            - the preference to to be indicated. Valid values are
	 *            PIXEL_ASPECT_RATIO, and PIXEL_RESOLUTION.
	 * @param value
	 *            - the value to be set for the indicated preference
	 * @param priority
	 *            - the priority of the indicated preference. Valid values are:
	 *            REQUIRED, PREFERRED, DONT_CARE, PREFERRED_NOT and
	 *            REQUIRED_NOT.
	 * @throws IllegalArgumentException
	 *             - if any of the parameters has an unappropriate value
	 */
	public void setPreference(int preference, Object value, int priority) throws IllegalArgumentException 
	{
		if (preference < NO_BACKGROUND_IMPACT || preference > DIRECT_COLOR_SUPPORT) 
		{
			throw new IllegalArgumentException("Preference parameter is invalid");
		}

		if (priority < REQUIRED || priority > REQUIRED_NOT) 
		{
			throw new IllegalArgumentException("Priority parameter is invalid");
		}
		
		Preference tmp = preferences[preference - NO_BACKGROUND_IMPACT];
		tmp.value = value;
		tmp.priority = priority;
	}

	/**
	 * Returns the preference value for the specified preference.
	 * 
	 * 
	 * @param preference
	 *            - the preference for which the value should be retrieved.
	 *            Valid values are PIXEL_ASPECT_RATIO, and PIXEL_RESOLUTION.
	 * @return the currently valid value for the specified preference. This
	 *         should be a java.awt.Dimension object
	 * @throws IllegalArgumentException
	 *             - if the paramter has an unappropriate value
	 */
	public Object getPreferenceValue(int preference) throws IllegalArgumentException 
	{
		if (preference < NO_BACKGROUND_IMPACT || preference > DIRECT_COLOR_SUPPORT) 
		{
			throw new IllegalArgumentException("Preference parameter is invalid");
		}
		else return preferences[preference - NO_BACKGROUND_IMPACT].value;
	}

	/**
	 * Return the priority for the specified preference.
	 * 
	 * Individual properties in the <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetupPattern</CODE></A> can
	 * then be examined using the <A HREF=
	 * "../../../../com/sun/dtv/ui/PlaneSetupPattern.html#getPriority(int)">
	 * <CODE>getPriority</CODE></A> method. Implemented features will return <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#REQUIRED">
	 * <CODE>REQUIRED</CODE></A>, not implemented features will return <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetupPattern.html#REQUIRED_NOT">
	 * <CODE>REQUIRED_NOT</CODE></A>.
	 * 
	 * 
	 * @param preference
	 *            - the preference to be indicated. Valid values for an
	 *            PlaneSetupPattern are: NO_GRAPHICS_IMPACT, NO_SUBTITLE_IMPACT,
	 *            NO_BACKGROUND_IMPACT, NO_VIDEO_IMPACT, NO_STILLVIDEO_IMPACT,
	 *            INTERLACED_DISPLAY, FLICKER_FILTERING,
	 *            VIDEO_GRAPHICS_PIXEL_ALIGNED, CHANGEABLE_SINGLE_COLOR,
	 *            STILL_IMAGE, VIDEO_MIXING, GRAPHICS_MIXING, MATTE_SUPPORT,
	 *            IMAGE_SCALING_SUPPORT, INDEXED_COLOR_SUPPORT,
	 *            DIRECT_COLOR_SUPPORT, PIXEL_ASPECT_RATIO, and
	 *            PIXEL_RESOLUTION. Subclasses may add further valid values. An
	 *            IllegalArgumentException shall be thrown if the preference is
	 *            not a valid value for this instance of PlaneSetupPattern
	 * @return the priority for the specified preference.
	 * @throws IllegalArgumentException
	 *             - if the preference parameter does not have a valid value
	 */
	public int getPriority(int preference) throws IllegalArgumentException 
	{
		if (preference < NO_BACKGROUND_IMPACT || preference > DIRECT_COLOR_SUPPORT) 
		{
			throw new IllegalArgumentException("Preference parameter is invalid");
		}
		else return preferences[preference - NO_BACKGROUND_IMPACT].priority;
	}

	/**
	 * Informs whether or not the specified <A
	 * HREF="../../../../com/sun/dtv/ui/PlaneSetup.html"
	 * title="class in com.sun.dtv.ui"><CODE>PlaneSetup</CODE></A> can be used
	 * to create a background plane that supports the features set in this
	 * pattern.
	 * 
	 * 
	 * @param setup
	 *            - - the PlaneSetup object to be tested against this pattern.
	 * @return true if this PlaneSetup object can be used to create a plane that
	 *         supports the feature set in this pattern, false otherwise.
	 */
	public boolean isSetupFitting(PlaneSetup setup) 
	{
		if(implies(setup.getPattern()))
			return true;
		else 
			return false;
	}
	boolean implies (PlaneSetupPattern psp)
	{
		for (int i = 0; i < preferences.length; i++) 
		{
			if(this.preferences[i].priority == REQUIRED || this.preferences[i].priority == REQUIRED_NOT)
			{
				if(psp.preferences[i].priority != this.preferences[i].priority)
					return false;
			}
		}
		return true;
	}
}
