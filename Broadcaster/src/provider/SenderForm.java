
package provider;

import br.edu.ifba.broadcaster.Channel;
import br.edu.ifba.broadcaster.ChannelSettings;
import br.edu.ifba.broadcaster.PlayList;
import br.edu.ifba.broadcaster.carousel.Carousel;
import br.edu.ifba.broadcaster.carousel.IDTVSObject;
import br.edu.ifba.broadcaster.carousel.IDTVSObjectBinderApp;
import br.edu.ifba.broadcaster.carousel.IDTVSObjectFile;
import br.edu.ifba.broadcaster.carousel.IDTVSObjectSet;
import br.edu.ifba.broadcaster.updconnection.ConnectionSender;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import java.io.File;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import uk.co.caprica.vlcj.binding.LibVlc;
import uk.co.caprica.vlcj.runtime.RuntimeUtil;

public class SenderForm extends javax.swing.JFrame {

    ConnectionSender connSender = null;
    Carousel carousel = null;
    PlayList playList = null;
    
    private Channel channel;
    
    /**
     * Creates new form SenderForm
     */
    public SenderForm() throws SocketException, UnknownHostException {
        
        initComponents();
                                                
        this.jTable1.getColumnModel().getColumn(0).setMinWidth(0);  
        this.jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);  
        this.jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        this.jButtonSetting.setVisible(false);
        NativeLibrary.addSearchPath(
                RuntimeUtil.getLibVlcLibraryName(), "C:\\Program Files\\VideoLAN\\VLC");
        Native.loadLibrary(RuntimeUtil.getLibVlcLibraryName(), LibVlc.class);
    }
    
    public void showSettingDialog(ChannelSettings settings) {
        
        SettingsDialog setDialog = new SettingsDialog(this, true, settings);
        setDialog.setAlwaysOnTop(true);
        setDialog.setVisible(true);
    }
    
    public void StartChannel(ChannelSettings settings) throws SocketException, UnknownHostException {
        
        //this.channel = new Channel("10.103.15.81", 5555, 2222, "Canal de Teste");
        //this.channel = new Channel("192.168.1.5", 5555, 2222, "Canal de Teste", 2000);
        //this.channel = new Channel("127.0.0.1", 5555, 2222, "Canal de Teste");
        this.channel = new Channel(settings);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonStart = new javax.swing.JButton();
        jButtonPause = new javax.swing.JButton();
        jButtonRestart = new javax.swing.JButton();
        jButtonAddObject = new javax.swing.JButton();
        jButtonMainContent = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonRemoveObject = new javax.swing.JButton();
        jButtonNewVersion = new javax.swing.JButton();
        jButtonSetting = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Broadcaster");

        jButtonStart.setText("Start Carousel");
        jButtonStart.setActionCommand("buttonStart");
        jButtonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartActionPerformed(evt);
            }
        });

        jButtonPause.setText("Pause Carousel");
        jButtonPause.setActionCommand("buttonPause");
        jButtonPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPauseActionPerformed(evt);
            }
        });

        jButtonRestart.setText("Reset Carousel");
        jButtonRestart.setActionCommand("buttonRestart");
        jButtonRestart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRestartActionPerformed(evt);
            }
        });

        jButtonAddObject.setText("Add Content");
        jButtonAddObject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddObjectActionPerformed(evt);
            }
        });

        jButtonMainContent.setText("Broadcast main content");
        jButtonMainContent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMainContentActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Content Name", "Version", "Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jButtonRemoveObject.setText("Remove Content");
        jButtonRemoveObject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveObjectActionPerformed(evt);
            }
        });

        jButtonNewVersion.setText("New Version");
        jButtonNewVersion.setActionCommand("jButtonNewVersion");
        jButtonNewVersion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewVersionActionPerformed(evt);
            }
        });

        jButtonSetting.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/set.png"))); // NOI18N
        jButtonSetting.setAlignmentY(0.0F);
        jButtonSetting.setEnabled(false);
        jButtonSetting.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSetting.setMaximumSize(new java.awt.Dimension(16, 16));
        jButtonSetting.setMinimumSize(new java.awt.Dimension(16, 16));
        jButtonSetting.setPreferredSize(new java.awt.Dimension(16, 16));
        jButtonSetting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSettingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonMainContent)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jButtonSetting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonStart, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jButtonPause, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jButtonRestart))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAddObject)
                        .addGap(7, 7, 7)
                        .addComponent(jButtonRemoveObject)
                        .addGap(7, 7, 7)
                        .addComponent(jButtonNewVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonMainContent)
                    .addComponent(jLabel1)
                    .addComponent(jButtonSetting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonStart)
                    .addComponent(jButtonPause)
                    .addComponent(jButtonRestart))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonAddObject)
                    .addComponent(jButtonRemoveObject)
                    .addComponent(jButtonNewVersion))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartActionPerformed
        this.channel.getCarousel().startCarousel();
    }//GEN-LAST:event_jButtonStartActionPerformed

    private void jButtonPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPauseActionPerformed
        this.channel.getCarousel().pauseCarousel();
    }//GEN-LAST:event_jButtonPauseActionPerformed

    private void jButtonRestartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRestartActionPerformed
        this.carousel.stopCarousel();
       
        //TODO: Limpar tabela
        
        this.channel.ResetCarousel();
        this.channel.getCarousel().startCarousel();
    }//GEN-LAST:event_jButtonRestartActionPerformed

    private void jButtonAddObjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddObjectActionPerformed

        JFileChooser j = new JFileChooser();
        j.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        j.showOpenDialog(null);
        File file = j.getSelectedFile();
                        
        try {
                    
            ArrayList<String> info = new ArrayList<>();
            if( file.getName().toUpperCase().endsWith(".CLASS") ) {
                
                String appName = JOptionPane.showInputDialog(this, "Nome da Aplicação", "Aplicação");
                info.add(appName);
            }
            
            IDTVSObjectSet objectSet = this.channel.SendExtraContent(file, info);
            
            for( IDTVSObject obj : objectSet  ) {
                
                if( obj.getTypeObject() == IDTVSObject.BINDER_APPLICATION_TYPE ) {
                    
                    DefaultTableModel model = (DefaultTableModel)this.jTable1.getModel(); 
                    model.addRow(new String[]{"" + obj.getIdObject(), ((IDTVSObjectBinderApp)obj).getMediaName(), obj.getVersionObject() + "", "Application"});
                    break;
                    
                } else if(obj.getTypeObject() == IDTVSObject.SINGLE_FILE_TYPE) {
                    
                    DefaultTableModel model = (DefaultTableModel)this.jTable1.getModel(); 
                    model.addRow(new String[]{"" + obj.getIdObject(), ((IDTVSObjectFile)obj).getFile().getName(), obj.getVersionObject() + "","Arquivo"});
                    break;
                    
                } else if(obj.getTypeObject() == IDTVSObject.BINDER_DIRECTORY_TYPE) {
                    
                    DefaultTableModel model = (DefaultTableModel)this.jTable1.getModel(); 
                    model.addRow(new String[]{"" + obj.getIdObject(), "Diretório | " + file.getName() + "\\", obj.getVersionObject() + "", "Diretório"});
                    break;
                }
            }
        
        } catch(Exception ex) {
            
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_jButtonAddObjectActionPerformed

    private void jButtonMainContentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMainContentActionPerformed

        JFileChooser j = new JFileChooser();
        j.showOpenDialog(null);

        File f = j.getSelectedFile();
        this.jLabel1.setText(f.getName());
        this.channel.SendMainContent(f);
    }//GEN-LAST:event_jButtonMainContentActionPerformed

    private void jButtonRemoveObjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveObjectActionPerformed
        
        int selectedRow = this.jTable1.getSelectedRow();
        
        if( selectedRow >= 0) {
        
            DefaultTableModel model = (DefaultTableModel)this.jTable1.getModel();
            
            String id = (String)model.getValueAt(selectedRow, 0);
            this.channel.getCarousel().RemoveObject(new Long(id));
            
            model.removeRow(selectedRow);
        }
    }//GEN-LAST:event_jButtonRemoveObjectActionPerformed

    private void jButtonNewVersionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewVersionActionPerformed
        
        int selectedRow = this.jTable1.getSelectedRow();
        
        if( selectedRow >= 0) {
        
            DefaultTableModel model = (DefaultTableModel)this.jTable1.getModel();
            
            String id = (String)model.getValueAt(selectedRow, 0);
            
            IDTVSObjectSet objectSet = this.channel.getCarousel().getObjectSet(new Long(id));
            
            for( IDTVSObject obj : objectSet  ) {
                
               if(obj.getTypeObject() == IDTVSObject.SINGLE_FILE_TYPE) {
                    
                    JFileChooser j = new JFileChooser();
                    j.setFileSelectionMode(JFileChooser.FILES_ONLY);
                    j.showOpenDialog(null);
                    File file = j.getSelectedFile();
                    
                     if( !file.getName().toUpperCase().equals(((IDTVSObjectFile)obj).getFile().getName().toUpperCase()) ) {
                         JOptionPane.showMessageDialog(this,"O arquivo deve tr mesmo nome e extensão da versão anterior");
                     } else {
                     
                         objectSet = this.channel.UpdateExtraContent(obj, file);
                         model.setValueAt(objectSet.get(0).getVersionObject()+"",selectedRow, 2);
                     }
                    
                    break;
                }
            }
        }else {
            
            JOptionPane.showMessageDialog(this, "Selecione um objeto");
        }
    }//GEN-LAST:event_jButtonNewVersionActionPerformed

    private void jButtonSettingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSettingActionPerformed
        
        this.showSettingDialog(this.channel.getSettings());
    }//GEN-LAST:event_jButtonSettingActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
            
            javax.swing.UIManager.setLookAndFeel(
            javax.swing.UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SenderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SenderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SenderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SenderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    SenderForm sender = new SenderForm();
                    sender.setVisible(true);
                    sender.showSettingDialog(null);
                } catch (SocketException | UnknownHostException ex) {
                    System.out.println(ex.getMessage());
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddObject;
    private javax.swing.JButton jButtonMainContent;
    private javax.swing.JButton jButtonNewVersion;
    private javax.swing.JButton jButtonPause;
    private javax.swing.JButton jButtonRemoveObject;
    private javax.swing.JButton jButtonRestart;
    private javax.swing.JButton jButtonSetting;
    private javax.swing.JButton jButtonStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
